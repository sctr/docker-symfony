#name: Build Docker Image
#
#on:
#    push:
#
#env:
#    REGISTRY: ghcr.io
#    REGISTRY_IMAGE_NAME: ghcr.io/${{ github.repository }}
#
#jobs:
#    build-and-push-amd64:
#        strategy:
#            fail-fast: false
#            matrix:
#                phpversion:
#                    - 8.3
##                    - 8.4
#        runs-on: ubuntu-latest
#        steps:
#            - name: Checkout
#              uses: actions/checkout@v4
#
#            - name: Login to GHCR
#              uses: docker/login-action@v3
#              with:
#                  registry: ${{ env.REGISTRY }}
#                  username: ${{ github.repository_owner }}
#                  password: ${{ secrets.GITHUB_TOKEN }}
#
#            - name: Set up QEMU
#              uses: docker/setup-qemu-action@v3
#
#            - name: Set up Docker Buildx
#              uses: docker/setup-buildx-action@v3
#
#            - name: Get Composer Cache Directory
#              id: composer-cache
#              run: |
#                  echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
#
#            - name: Build and push ${{ matrix.phpversion }}
#              uses: docker/build-push-action@v6
#              with:
#                  context: .
#                  tags: ${{ env.REGISTRY_IMAGE_NAME }}:${{ matrix.phpversion }}-amd64
#                  file: ./${{ matrix.phpversion }}/Dockerfile
#                  platforms: linux/amd64
#                  cache-from: type=gha
#                  cache-to: type=gha,mode=max
#
#    build-and-push-arm64:
#        strategy:
#            fail-fast: false
#            matrix:
#                phpversion:
#                    - 8.3
##                    - 8.4
#        runs-on: ubuntu-latest-arm64
#        steps:
#            - name: Checkout
#              uses: actions/checkout@v4
#
#            - name: Login to GHCR
#              uses: docker/login-action@v3
#              with:
#                  registry: ${{ env.REGISTRY }}
#                  username: ${{ github.repository_owner }}
#                  password: ${{ secrets.GITHUB_TOKEN }}
#
#            - name: Set up Docker Buildx
#              uses: docker/setup-buildx-action@v3
#
#            - name: Get Composer Cache Directory
#              id: composer-cache
#              run: |
#                  echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
#
#            - name: Build and push ${{ matrix.phpversion }}
#              uses: docker/build-push-action@v6
#              with:
#                  context: .
#                  tags: ${{ env.REGISTRY_IMAGE_NAME }}:${{ matrix.phpversion }}-arm64
#                  file: ./${{ matrix.phpversion }}/Dockerfile
#                  platforms: linux/arm64
#                  cache-from: type=gha
#                  cache-to: type=gha,mode=max
#
#    create-multiarch-manifests:
#        needs: [build-and-push-amd64, build-and-push-arm64]
#        strategy:
#            fail-fast: false
#            matrix:
#                phpversion:
#                    - 8.3
##                    - 8.4
#        runs-on: ubuntu-latest
#        steps:
#            - name: Checkout
#              uses: actions/checkout@v4
#
#            - name: Login to GHCR
#              uses: docker/login-action@v3
#              with:
#                  registry: ${{ env.REGISTRY }}
#                  username: ${{ github.repository_owner }}
#                  password: ${{ secrets.GITHUB_TOKEN }}
#
#            -   name: Create ${{ matrix.phpversion }} manifest and push
#                run: |
#                    docker manifest create \
#                      ${{ env.REGISTRY_IMAGE_NAME }}:${{ matrix.phpversion }} \
#                      --amend ${{ env.REGISTRY_IMAGE_NAME }}:${{ matrix.phpversion }}-amd64 \
#                      --amend ${{ env.REGISTRY_IMAGE_NAME }}:${{ matrix.phpversion }}-arm64
#                    docker manifest push sctr/docker-symfony:${{ matrix.phpversion }}